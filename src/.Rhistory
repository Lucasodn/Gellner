steamengines1849,
farmer1849,
crafters,
all_factoryworker1849,
countyarea,
turner_share = Gesamt64/countypop1864,
indworker_share1864 = occ1864_ind/countypop1864,
prot_share1864 = rel1864_pro/countypop1864,
cat_share1864 = rel1864_cat/countypop1864,
otherrel_share1864 = rel1864_other/countypop1864,
student_share1864 = students1864/countypop1864,
textileworker_share1849 = textileworker1849/countypop1849,
metal_miningworker_share1849 = metal_miningworker1849/countypop1849,
other_factoryworker_share1849 = other_factoryworker1849/countypop1849,
factoryworker_share1849 = all_factoryworker1849/countypop1849,
farmer_share1849 = farmer1849/countypop1849,
crafter_share1849 = crafters/countypop1849,
steamengines_mining1849 = steamengines1849/metal_miningworker1849,
steamengines_capita1849 = steamengines1849/countypop1849,
student_share1849 = students1849/countypop1849,
prot_share1849 = rel1849_pro/countypop1849,
turner_share15to65 = Gesamt64/pop1864_tot_15to65,
indworker_share15to65 = occ1864_ind/pop1864_tot_15to65,
popgrowth = countypop1864/countypop1849 - 1)
models_steamabsolut <- list()
models_steamabsolut$basic <- lm(data = dat_share, Gesamt64 ~ steamengines1849)
models_steamabsolut$with_prot <- lm(data = dat_share, Gesamt64 ~ steamengines1849 +
rel1849_pro)
models_steamabsolut$with_edu <- lm(data = dat_share, Gesamt64 ~ steamengines1849 +
students1849)
models_steamabsolut$with_pop <- lm(data = dat_share, Gesamt64 ~ steamengines1849 +
countypop1864)
models_steamabsolut$full <- lm(data = dat_share, Gesamt64 ~ steamengines1849 +
rel1849_pro +
students1849 +
countypop1864)
plot(models_steamabsolut$basic, 1)
plot(models_steamabsolut$basic, 3)
plot(models_steamabsolut$full, 1)
plot(models_steamabsolut$full, 3)
res <- resid(models_steamabsolut$basic)
plot(fitted(models_steamabsolut$basic), res)
qqnorm(res)
###########################################################################
# MODEL NAMES
modelnames_steamabsolut<- c("Number of Steam Engines 1849",
"Protestants 1849",
"Students 1849",
"Countypopulation 1864")
###########################################################################
# EXTRACT MODEL FOR PUBLISHING
stargazer(models_steamabsolut,
out = "../publish/full_modelsteamabsolut.tex",
title = "Linear Model Results Steam Engines",
covariate.labels = modelnames_steamabsolut,
dep.var.labels = "Number of Turner", font.size = "tiny")
stargazer(models_steamabsolut,
type = "text",
out = "../misc/modelsteamabsolut.txt",
title = "Linear Model Results Steam Engines",
covariate.labels = modelnames_steamabsolut,
dep.var.labels = "Number of Turner")
test <- data.frame(dat_share$turner_share, dat_share$indworker_share1864, dat_share$prot_share1864,
dat_share$student_share1864, dat_share$area1816_qkm)
pacman::p_load(tidyverse,
pastecs,
stargazer,
coefplot,
caret)
# this is our analysis file. first we load in the data. select only columns without NA for industry workers.
dat <- readRDS("../data/turner_sharechange.RDS") %>%
distinct()
# dealing with Duisburg and Essen as edge case
edgecase <- filter(dat, kreiskey1849 %in% c(289, 290))
edgecase <- edgecase %>% group_by(kreiskey1849) %>% summarize(popcivil = mean(popcivil),
Gesamt64 = mean(Gesamt64),
Beruf_Handwerk_64 = mean(Beruf_Handwerk_64),
Beruf_Gelehrte_64 = mean(Beruf_Gelehrte_64),
Beruf_Kaufleute_64 = mean(Beruf_Kaufleute_64),
kreiskey1864 = as.integer(mean(kreiskey1864)),
pop1864_tot_15to65 = sum(pop1864_tot_15to65),
countypop1849 = mean(countypop1849),
rel1849_pro = mean(rel1849_pro),
rel1849_cat = mean(rel1849_cat),
rel1849_other = mean(rel1849_other),
countypop1864 = sum(countypop1864),
rel1864_pro = sum(rel1864_pro),
rel1864_cat = sum(rel1864_cat),
rel1864_other = sum(rel1864_other),
occ1864_ind = sum(occ1864_ind),
students1864 = sum(students1864),
textileworker1849 = mean(textileworker1849),
metal_miningworker1849 = mean(metal_miningworker1849),
other_factoryworker1849 = mean(other_factoryworker1849),
all_factoryworker1849 = mean(all_factoryworker1849),
farmer1849 = mean(farmer1849),
steamengines1849 = mean(steamengines1849),
crafters = mean(crafters),
students1849 = mean(students1849),
servs = mean(servs),
area1816_qkm = mean(area1816_qkm))
dat <- dat[-c(which(dat$kreiskey1849 %in% c(289, 290))),]
dat <- rbind(dat, edgecase)
dat1 <- dat %>% group_by(kreiskey1849) %>% summarize(popcivil = mean(popcivil),
Gesamt64 = mean(Gesamt64),
Beruf_Handwerk_64 = mean(Beruf_Handwerk_64),
Beruf_Gelehrte_64 = mean(Beruf_Gelehrte_64),
Beruf_Kaufleute_64 = mean(Beruf_Kaufleute_64),
kreiskey1864 = as.integer(mean(kreiskey1864)),
pop1864_tot_15to65 = sum(pop1864_tot_15to65),
countypop1849 = mean(countypop1849),
rel1849_pro = mean(rel1849_pro),
rel1849_cat = mean(rel1849_cat),
rel1849_other = mean(rel1849_other),
countypop1864 = sum(countypop1864),
rel1864_pro = sum(rel1864_pro),
rel1864_cat = sum(rel1864_cat),
rel1864_other = sum(rel1864_other),
occ1864_ind = sum(occ1864_ind),
students1864 = sum(students1864),
textileworker1849 = mean(textileworker1849),
metal_miningworker1849 = mean(metal_miningworker1849),
other_factoryworker1849 = mean(other_factoryworker1849),
all_factoryworker1849 = mean(all_factoryworker1849),
farmer1849 = mean(farmer1849),
steamengines1849 = mean(steamengines1849),
crafters = mean(crafters),
students1849 = mean(students1849),
servs = mean(servs),
area1816_qkm = mean(area1816_qkm))
scatter.smooth(dat1$countypop1864, dat1$occ1864_ind, main='Countypop vs. Ind worker')
scatter.smooth(dat1$Gesamt64, dat1$countypop1864, main='Countypop vs. Turner')
scatter.smooth(dat1$Gesamt64, dat1$occ1864_ind, main='Ind worker vs. ETurner')
scatter.smooth(dat1$Gesamt64, dat1$steamengines1849, main='Steam Engines vs. Turner')
scatter.smooth(dat1$Gesamt64, dat1$students1849, main='Students 1849 vs. Turner')
scatter.smooth(dat1$Gesamt64, dat1$students1864, main='Students 1864 vs. Turner')
dat1 %>%
ggplot(aes(occ1864_ind)) +
geom_histogram()
dat1 %>%
ggplot(aes(Gesamt64)) +
geom_histogram()
dat1 %>%
ggplot(aes(steamengines1849)) +
geom_histogram()
dat1 %>%
ggplot(aes(countypop1864)) +
geom_histogram()
dat1 %>%
ggplot( aes(x=Gesamt64)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8)
# get the correlation coefficient between Industryworker and Turner, which is 0.51
dat.cor <- dat1[complete.cases(dat1),]
cor(dat.cor$Gesamt64, dat.cor$occ1864_ind)
shapiro.test(dat1$Gesamt64)
shapiro.test(dat1$occ1864_ind)
cor.test(dat1$Gesamt64, dat1$occ1864_ind,
method = "pearson")
cor.test(dat1$Gesamt64, dat1$countypop1864,
method = "pearson")
# creating a new dataframe with the shares.
dat_share <- dat1 %>% transmute(
kreiskey1864,
countypop1864,
Gesamt64,
occ1864_ind,
rel1864_pro,
students1864,
area1816_qkm,
turner_share = Gesamt64/countypop1864,
indworker_share1864 = occ1864_ind/countypop1864,
prot_share1864 = rel1864_pro/countypop1864,
cat_share1864 = rel1864_cat/countypop1864,
otherrel_share1864 = rel1864_other/countypop1864,
student_share1864 = students1864/countypop1864,
textileworker_share1849 = textileworker1849/countypop1849,
metal_miningworker_share1849 = metal_miningworker1849/countypop1849,
other_factoryworker_share1849 = other_factoryworker1849/countypop1849,
factoryworker_share1849 = all_factoryworker1849/countypop1849,
farmer_share1849 = farmer1849/countypop1849,
crafter_share1849 = crafters/countypop1849,
steamengines_mining1849 = steamengines1849/metal_miningworker1849,
steamengines_capita1849 = steamengines1849/countypop1849,
student_share1849 = students1849/countypop1849,
prot_share1849 = rel1849_pro/countypop1849,
turner_share15to65 = Gesamt64/pop1864_tot_15to65,
indworker_share15to65 = occ1864_ind/pop1864_tot_15to65,
popgrowth = countypop1864/countypop1849 - 1)
test <- data.frame(dat_share$turner_share, dat_share$indworker_share1864, dat_share$prot_share1864,
dat_share$student_share1864, dat_share$area1816_qkm)
cor.matrix <- cor(test, use="complete.obs", method = "pearson")
dat_shareindu <- dat_share[!(dat_share$kreiskey1864 == 85 |
dat_share$kreiskey1864 == 95 |
dat_share$kreiskey1864 == 107 |
dat_share$kreiskey1864 == 211 |
dat_share$kreiskey1864 == 227 |
dat_share$kreiskey1864 == 249 |
dat_share$kreiskey1864 == 286 |
dat_share$kreiskey1864 == 301 |
dat_share$kreiskey1864 == 339),]
models <- list()
models$basic <- lm(data = dat_shareindu, turner_share ~ indworker_share1864)
models$with_edu <- lm(data = dat_shareindu, turner_share ~ indworker_share1864 +
student_share1864)
models$with_prot <- lm(data = dat_shareindu, turner_share ~ indworker_share1864 +
prot_share1864)
models$full <- lm(data = dat_shareindu, turner_share ~ indworker_share1864 +
student_share1864+
prot_share1864 +
area1816_qkm)
coefplot(models$full)
plot(models$basic, 1)
coefplot(models$full)
coefplot(models$full)
plot(models$full, 1)
models_farmer <- list()
models_farmer$basic <- lm(data = dat_share, turner_share ~ farmer_share1849)
models_farmer$with_prot <- lm(data = dat_share, turner_share ~ farmer_share1849 +
prot_share1849)
models_farmer$with_edu <- lm(data = dat_share, turner_share ~ farmer_share1849 +
student_share1849)
models_farmer$full <- lm(data = dat_share, turner_share ~ farmer_share1849 +
prot_share1849 +
student_share1849)
###########################################################################
# MODEL NAMES
modelnames_farmer<- c("Farmer share 1849",
"Protestant share 1849",
"Enrollment rate 1849")
###########################################################################
# EXTRACT MODEL FOR PUBLISHING
stargazer(models_farmer,
out = "../publish/full_modelfarmerupdate.tex",
title = "Linear Model Results Farmer share",
covariate.labels = modelnames_farmer,
dep.var.labels = "Share of Turner", font.size = "tiny")
stargazer(models_farmer,
type = "text",
out = "../misc/modelfarmerupdate.txt",
title = "Linear Model Results Farmer share",
covariate.labels = modelnames_farmer,
dep.var.labels = "Share of Turner")
models_crafts <- list()
models_crafts$basic <- lm(data = dat_share, turner_share ~ crafter_share1849)
models_crafts$with_prot <- lm(data = dat_share, turner_share ~ crafter_share1849 +
prot_share1864)
models_crafts$with_edu <- lm(data = dat_share, turner_share ~ crafter_share1849 +
student_share1864)
models_crafts$full <- lm(data = dat_share, turner_share ~ crafter_share1849 +
prot_share1864 +
student_share1864)
###########################################################################
# MODEL NAMES
modelnames_crafts<- c("Craftsmen share 1849",
"Protestant share 1849",
"Enrollment rate 1849")
###########################################################################
# EXTRACT MODEL FOR PUBLISHING
stargazer(models_crafts,
out = "../publish/full_modelcraftsupdate.tex",
title = "Linear Model Results Craftsmen share",
covariate.labels = modelnames_crafts,
dep.var.labels = "Share of Turner", font.size = "tiny")
stargazer(models_crafts,
type = "text",
out = "../misc/modelcraftsupdate.txt",
title = "Linear Model Results Craftsmen share",
covariate.labels = modelnames_farmer,
dep.var.labels = "Share of Turner")
models_metal <- list()
models_metal$basic <- lm(data = dat_share, turner_share ~ metal_miningworker_share1849)
models_metal$with_prot <- lm(data = dat_share, turner_share ~ metal_miningworker_share1849 +
prot_share1849)
models_metal$with_edu <- lm(data = dat_share, turner_share ~ metal_miningworker_share1849 +
prot_share1849)
models_metal$with_craft <- lm(data = dat_share, turner_share ~ metal_miningworker_share1849 +
student_share1849)
models_metal$full <- lm(data = dat_share, turner_share ~ metal_miningworker_share1849 +
prot_share1849 +
student_share1849 +
crafter_share1849)
coefplot(models_metal$full)
models_metal <- list()
models_metal$basic <- lm(data = dat_share, turner_share ~ metal_miningworker_share1849)
models_metal$with_prot <- lm(data = dat_share, turner_share ~ metal_miningworker_share1849 +
prot_share1849)
models_metal$with_edu <- lm(data = dat_share, turner_share ~ metal_miningworker_share1849 +
prot_share1849)
models_metal$with_craft <- lm(data = dat_share, turner_share ~ metal_miningworker_share1849 +
student_share1849)
models_metal$full <- lm(data = dat_share, turner_share ~ metal_miningworker_share1849 +
prot_share1849 +
student_share1849)
coefplot(models_metal$full)
plot(models_metal$basic, 1)
plot(models_metal$basic, 3)
plot(models_metal$full, 1)
plot(models_metal$full, 3)
###########################################################################
# MODEL NAMES
modelnames_metal<- c("Metal and Mining share 1849",
"Protestant share 1849",
"Enrollment rate 1849")
###########################################################################
# EXTRACT MODEL FOR PUBLISHING
stargazer(models_metal,
out = "../publish/full_modelmetal.tex",
title = "Linear Model Results Metal and Mining share",
covariate.labels = modelnames_metal,
dep.var.labels = "Share of Turner", font.size = "tiny")
stargazer(models_metal,
type = "text",
out = "../misc/modelmetal.txt",
title = "Linear Model Results Metal and Mining share",
covariate.labels = modelnames_metal,
dep.var.labels = "Share of Turner")
models_metal <- list()
models_metal$basic <- lm(data = dat_share, turner_share ~ metal_miningworker_share1849)
models_metal$with_prot <- lm(data = dat_share, turner_share ~ metal_miningworker_share1849 +
prot_share1849)
models_metal$with_craft <- lm(data = dat_share, turner_share ~ metal_miningworker_share1849 +
student_share1849)
models_metal$full <- lm(data = dat_share, turner_share ~ metal_miningworker_share1849 +
prot_share1849 +
student_share1849)
coefplot(models_metal$full)
plot(models_metal$basic, 1)
plot(models_metal$basic, 3)
plot(models_metal$full, 1)
plot(models_metal$full, 3)
###########################################################################
# MODEL NAMES
modelnames_metal<- c("Metal and Mining share 1849",
"Protestant share 1849",
"Enrollment rate 1849")
###########################################################################
# EXTRACT MODEL FOR PUBLISHING
stargazer(models_metal,
out = "../publish/full_modelmetal.tex",
title = "Linear Model Results Metal and Mining share",
covariate.labels = modelnames_metal,
dep.var.labels = "Share of Turner", font.size = "tiny")
stargazer(models_metal,
type = "text",
out = "../misc/modelmetal.txt",
title = "Linear Model Results Metal and Mining share",
covariate.labels = modelnames_metal,
dep.var.labels = "Share of Turner")
dat_shareindu <- dat_share[!(dat_share$kreiskey1864 == 85 |
dat_share$kreiskey1864 == 95 |
dat_share$kreiskey1864 == 107 |
dat_share$kreiskey1864 == 211 |
dat_share$kreiskey1864 == 227 |
dat_share$kreiskey1864 == 249 |
dat_share$kreiskey1864 == 286 |
dat_share$kreiskey1864 == 301 |
dat_share$kreiskey1864 == 339),]
models <- list()
models$basic <- lm(data = dat_shareindu, turner_share ~ indworker_share1864)
models$with_edu <- lm(data = dat_shareindu, turner_share ~ indworker_share1864 +
student_share1864)
models$with_prot <- lm(data = dat_shareindu, turner_share ~ indworker_share1864 +
prot_share1864)
models$full <- lm(data = dat_shareindu, turner_share ~ indworker_share1864 +
student_share1864+
prot_share1864)
coefplot(models$full)
plot(models$basic, 1)
plot(models$basic, 3)
plot(models$full, 1)
plot(models$full, 3)
#produce residual vs. fitted plot
res <- resid(models$basic)
plot(fitted(models$basic), res)
qqnorm(res)
qqline(res)
###########################################################################
# MODEL NAMES
modelnames <- c("Industry worker share",
"Enrollment rate",
"Protestant share")
###########################################################################
# EXTRACT MODEL FOR PUBLISHING
stargazer(models,
out = "../publish/final publish/full_modelindustry1864update.tex",
title = "Linear Model Results Industry Worker 1864",
covariate.labels = modelnames,
dep.var.labels = "Share of Turner", font.size = "tiny")
stargazer(models,type = "text",
out = "../misc/modelindustry1864update.txt",
title = "Linear Model Results Industry Worker 1864",
covariate.labels = modelnames,
dep.var.labels = "Share of Turner")
mean(dat_share$turner_share)
view(dat_share)
test <- data.frame(dat_share$turner_share, dat_share$indworker_share1864, dat_share$prot_share1864,
dat_share$student_share1864,dat_share$student_share1849, dat_share$area1816_qkm)
cor.matrix <- cor(test, use="complete.obs", method = "pearson")
modelnames <- c("",
"Turner",
"Industry worker",
"Protestants",
"Students",
"Countyarea")
modelnames <- c("",
"Turner",
"Industry worker",
"Protestants",
"Students",
"Students 1849",
"Countyarea")
stargazer(cor.matrix, out = "../publish/final publish/Correlation Matrix 1864.tex",
covariate.labels = modelnames,
title = "Correlation Matrix 1864 Shares", font.size = "tiny")
test <- data.frame(dat_share$turner_share, dat_share$indworker_share1864, dat_share$prot_share1864,
dat_share$student_share1864, dat_share$area1816_qkm)
cor.matrix <- cor(test, use="complete.obs", method = "pearson")
modelnames <- c("",
"Turner",
"Industry worker",
"Protestants",
"Students",
"Countyarea")
stargazer(cor.matrix, out = "../publish/final publish/Correlation Matrix 1864.tex",
covariate.labels = modelnames,
title = "Correlation Matrix 1864 Shares", font.size = "tiny")
dat_shareindu <- dat_share[!(dat_share$kreiskey1864 == 85 |
dat_share$kreiskey1864 == 95 |
dat_share$kreiskey1864 == 107 |
dat_share$kreiskey1864 == 211 |
dat_share$kreiskey1864 == 227 |
dat_share$kreiskey1864 == 249 |
dat_share$kreiskey1864 == 286 |
dat_share$kreiskey1864 == 301 |
dat_share$kreiskey1864 == 339),]
models <- list()
models$basic <- lm(data = dat_shareindu, turner_share ~ indworker_share1864)
models$with_edu <- lm(data = dat_shareindu, turner_share ~ indworker_share1864 +
student_share1864)
models$with_prot <- lm(data = dat_shareindu, turner_share ~ indworker_share1864 +
prot_share1864)
models$full <- lm(data = dat_shareindu, turner_share ~ indworker_share1864 +
student_share1864+
prot_share1864 +
area1816_qkm)
coefplot(models$full)
plot(models$basic, 1)
plot(models$basic, 3)
plot(models$full, 1)
plot(models$full, 3)
#produce residual vs. fitted plot
res <- resid(models$basic)
plot(fitted(models$basic), res)
qqnorm(res)
qqline(res)
###########################################################################
# MODEL NAMES
modelnames <- c("Industry worker share 1864",
"Enrollment rate 1864",
"Protestant share 1864",
"Countysize")
###########################################################################
# EXTRACT MODEL FOR PUBLISHING
stargazer(models,
out = "../publish/final publish/full_modelindustry1864update.tex",
title = "Linear Model Results Industry Worker 1864",
covariate.labels = modelnames,
dep.var.labels = "Share of Turner", font.size = "tiny")
stargazer(models,type = "text",
out = "../misc/modelindustry1864update.txt",
title = "Linear Model Results Industry Worker 1864",
mean.sd = TRUE,
covariate.labels = modelnames,
dep.var.labels = "Share of Turner")
stargazer(models,type = "text",
out = "../misc/modelindustry1864update.txt",
title = "Linear Model Results Industry Worker 1864",
covariate.labels = modelnames,
dep.var.labels = "Share of Turner")
mean(dat_share$turner_share)
stargazer(models,type = "text",
out = "../misc/modelindustry1864update.txt",
title = "Linear Model Results Industry Worker 1864",
add.lines = list(c("Mean Share of Turner", "0.00225", "0.00225",
"0.00225", "0.00225")),
covariate.labels = modelnames,
dep.var.labels = "Share of Turner")
#loading in packages.
pacman::p_load(tidyverse, ape, xtable, geosphere, sf)
centroid <- sf::st_read("../data/Data Proxy Industrializtaion/Centroid.qml", layer = "layer_styles")
install.packages("sf", configure.args = "--with-proj-lib=/usr/local/lib/")
#loading in packages.
pacman::p_load(tidyverse, ape, xtable, geosphere, sf)
centroid <- sf::st_read("../data/Data Proxy Industrializtaion/Centroid.qml", layer = "layer_styles")
library(remotes)
install_github("r-spatial/sf", configure.args = "--with-proj-lib=/usr/local/lib/")
centroid <- sf::st_read("../data/Data Proxy Industrializtaion/Centroid.qml", layer = "layer_styles")
#loading in packages.
pacman::p_load(tidyverse, ape, xtable, geosphere, sf)
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages("rgdal", repos="http://R-Forge.R-project.org", type="source")
library(devtools)
install_github("r-spatial/sf", configure.args = "--with-proj-lib=/usr/local/lib/")
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages("rgdal", repos="http://R-Forge.R-project.org", type="source")
library(devtools)
#loading in packages.
pacman::p_load(tidyverse, ape, xtable, geosphere, sf, devtools)
install.packages("rgeos", repos="http://R-Forge.R-project.org", type="source")
install.packages("rgdal", repos="http://R-Forge.R-project.org", type="source")
library(devtools)
install_github("r-spatial/sf", configure.args = "--with-proj-lib=/usr/local/lib/")
